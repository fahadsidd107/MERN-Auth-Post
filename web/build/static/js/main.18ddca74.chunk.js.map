{"version":3,"sources":["logo.svg","core.js","context/Reducer.jsx","context/Context.jsx","components/login/login.jsx","components/signup/signup.jsx","assets/download.jfif","components/posts/posts.jsx","components/profile/profile.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["baseUrl","window","location","hostname","split","reducer","state","action","type","payload","name","email","contact","website","address","user","console","log","GlobalContext","createContext","data","ContextProvider","children","useReducer","dispatch","Provider","value","validationSchema","yup","required","password","min","max","Login","history","useHistory","useContext","formik","useFormik","initialValues","onSubmit","values","axios","post","then","res","alert","setTimeout","push","style","padding","margin","textAlign","handleSubmit","Grid","container","spacing","item","xl","lg","xs","sm","md","sx","width","Stack","TextField","color","id","label","placeholder","variant","onChange","handleChange","error","touched","Boolean","errors","helperText","Button","marginBottom","marginLeft","onClick","url","Signup","styled","Dialog","theme","Posts","React","createdby","setToggleGetUser","toggleGetUser","useState","posts","setPosts","useEffect","get","Box","flexGrow","AppBar","position","Toolbar","IconButton","size","edge","mr","Typography","component","paddingLeft","paddingRight","height","fontSize","map","eachPost","Card","maxWidth","CardHeader","avatar","Avatar","backgroundColor","src","imge1","title","CardContent","CardActions","disableSpacing","Profile","gutterBottom","App","exact","path","render","to","pathname","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18ddca74.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\nconst dev = \"http://localhost:7000\"\nexport const baseUrl = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";","export const reducer = (state, action) => {\n    switch (action.type) {\n        case \"LOGIN\": {\n            if (\n                action.payload.name &&\n                action.payload.email &&\n                action.payload.contact &&\n                action.payload.website &&\n                action.payload.address\n            ) {\n                return { ...state, user: action.payload };\n            } else {\n                console.log(`invalid data`);\n                return state;\n            }\n        }\n        case \"LOGOUT\": {\n            return { ...state, user: null }; // set this to null on purpose, do not change\n        }\n\n        default: {\n            return state;\n        }\n    }\n};\n","import React, { createContext, useReducer } from \"react\";\nimport { reducer } from \"./Reducer\";\n\nexport const GlobalContext = createContext(\"Initial Value\");\nlet data = {\n  user: {},\n};\n\nexport default function ContextProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, data);\n\n  return (\n    <GlobalContext.Provider value={{ state, dispatch }}>\n      {children}\n    </GlobalContext.Provider>\n  );\n}","import { Formik, Field, Form, useFormik } from \"formik\";\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { Grid } from '@mui/material';\nimport Item from '@mui/material/Grid'\nimport * as yup from 'yup';\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nimport { baseUrl } from \"./../../core\"\nimport { GlobalContext } from \"../../context/Context\";\nimport { useContext } from \"react\";\n\nconst validationSchema = yup.object({\n\n    email: yup\n        .string('Enter your email')\n        .email('Enter a valid email')\n        .required('Email is required'),\n\n    password: yup\n        .string('Enter your password')\n        .min(8, 'Password should be of minimum 8 characters length')\n        .max(10, 'No more then 10')\n        .required('Password is required'),\n});\n\nfunction Login() {\n    let history = useHistory();\n    let { dispatch } = useContext(GlobalContext);\n    const formik = useFormik({\n        validationSchema: validationSchema,\n        initialValues: {\n            email: '',\n            password: '',\n        },\n        onSubmit: function (values) {\n            console.log(\"values: \", values)\n            axios.post(`${baseUrl}/api/v1/login`, {\n                email: values.email,\n                password: values.password,\n            })\n                .then((res) => {\n\n                    console.log(\"res: \", res.data);\n                    if (res.data !== \"Authentication fail\") {\n                        dispatch({\n                            type: \"LOGIN\",\n                            payload: {\n                                name: res.data.name,\n                                email: res.data.email,\n                                contact: res.data.contact,\n                                website: res.data.website,\n                                address: res.data.address,\n                            },\n                        });\n                        alert(\"login successfull\")\n                        setTimeout(() => {\n                            history.push(\"/posts\")\n                        }, 1000);\n                    }\n                    else {\n                        alert(\"invalid credential\")\n                    }\n                })\n        }\n    });\n\n    return (\n\n        <div style={{ padding: \"1rem\" }}>\n            <h1 style={{ margin: \"auto\", padding: \"1rem\", textAlign: \"center\" }}>Log In to your account</h1>\n            <br />\n            <form onSubmit={formik.handleSubmit}>\n                <Grid container spacing={2}>\n                    <Grid item xl={6} lg={6} xs={12} sm={12} md={12} sx={{ width: \"50%\", margin: \"auto\" }} >\n                        <Item >\n                            <Stack spacing={3}  >\n                                <TextField\n                                    color=\"primary\"\n                                    id=\"outlined-basic\"\n                                    label=\"Email\"\n                                    placeholder=\"fsiddiqui107@gmail\"\n                                    variant=\"outlined\"\n                                    name=\"email\"\n                                    value={formik.values.email}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.email && Boolean(formik.errors.email)}\n                                    helperText={formik.touched.email && formik.errors.email}\n                                />\n\n                                <TextField\n                                    color=\"primary\"\n                                    id=\"filled-basic\"\n                                    label=\"Password\"\n                                    placeholder=\"Enter correct password\"\n                                    variant=\"outlined\"\n                                    type=\"password\"\n                                    name=\"password\"\n                                    value={formik.values.password}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.password && Boolean(formik.errors.password)}\n                                    helperText={formik.touched.password && formik.errors.password}\n                                />\n\n                                <Grid item xl={6} lg={6} xs={12} sm={12} md={12}  >\n                                    <Item >\n                                        <Button sx={{ marginBottom: \"1%\" }} variant=\"contained\" color=\"inherit\" type=\"submit\" >Log in</Button>&nbsp;or\n                                        <Button sx={{ marginLeft: \"1%\", marginBottom: \"1%\" }} variant=\"text\" color=\"inherit\" type=\"submit\" onClick={() => { history.push(\"/signup\") }}>Sign</Button>to register\n                                    </Item >\n                                </Grid>\n                            </Stack>\n                        </Item >\n                    </Grid>\n                </Grid>\n            </form>\n        </div>\n    );\n}\n\nexport default Login;","import { Formik, Field, Form, useFormik } from \"formik\";\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { Grid } from '@mui/material';\nimport Item from '@mui/material/Grid'\nimport * as yup from 'yup';\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nimport { baseUrl } from \"./../../core\"\n\nconst validationSchema = yup.object({\n\n    name: yup\n        .string('Enter your Name')\n        .required('Name is required'),\n\n    email: yup\n        .string('Enter your email')\n        .email('Enter a valid email')\n        .required('Email is required'),\n\n    password: yup\n        .string('Enter your password')\n        .min(8, 'Password should be of minimum 8 characters length')\n        .max(10, 'No more then 10')\n        .required('Password is required'),\n\n    contact: yup\n        .string('Enter your Contact')\n        .min(11, \"invalid number\")\n        .max(11, \"invalid number\")\n        .required('contact number is required'),\n\n    address: yup\n        .string('Enter your address')\n        .required('Address is required'),\n    website: yup\n        .string('Enter your profile/URL')\n        .url(\"please enter valid URL e.g: https://somewebsite.com\")\n        .required('profile/URL is required'),\n});\n\nfunction Signup() {\n    let history = useHistory();\n    const formik = useFormik({\n        validationSchema: validationSchema,\n        initialValues: {\n            name: '',\n            email: '',\n            password: '',\n            contact: '',\n            address: '',\n            website: '',\n        },\n        onSubmit: function (values) {\n            console.log(\"values: \", values)\n            axios.post(`${baseUrl}/api/v1/signup`, {\n                name: values.name,\n                email: values.email,\n                password: values.password,\n                contact: values.contact,\n                address: values.address,\n                website: values.website,\n            })\n                .then((res) => {\n                    console.log(\"res: \", res.data);\n                    if (res.data === \"profile created\") {\n                        alert(\"signup successfully\")\n                        setTimeout(() => {\n                            history.push(\"/login\")\n                        }, 1000);\n                    }\n                })\n        }\n    });\n\n    return (\n\n        <div style={{ padding: \"1rem\" }}>\n            <h1 style={{ margin: \"auto\", padding: \"1rem\", textAlign: \"center\" }}>Sign Up to Register Yourself</h1>\n            <br />\n            <form onSubmit={formik.handleSubmit}>\n                <Grid container spacing={2}>\n                    <Grid item xl={6} lg={6} xs={12} sm={12} md={12} sx={{ width: \"50%\", margin: \"auto\" }} >\n                        <Item >\n                            <Stack spacing={3}  >\n                                <TextField\n                                    color=\"secondary\"\n                                    id=\"outlined-basic\"\n                                    label=\"Full Name\"\n                                    placeholder=\"Muhammad Fahad Siddiqui\"\n                                    variant=\"outlined\"\n                                    name=\"name\"\n                                    value={formik.values.name}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.name && Boolean(formik.errors.name)}\n                                    helperText={formik.touched.name && formik.errors.name}\n                                />\n\n                                <TextField\n                                    color=\"secondary\"\n                                    id=\"outlined-basic\"\n                                    label=\"Email\"\n                                    placeholder=\"fsiddiqui107@gmail.com\"\n                                    variant=\"outlined\"\n                                    name=\"email\"\n                                    value={formik.values.email}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.email && Boolean(formik.errors.email)}\n                                    helperText={formik.touched.email && formik.errors.email}\n                                />\n\n                                <TextField\n                                    color=\"secondary\"\n                                    id=\"filled-basic\"\n                                    label=\"Password\"\n                                    placeholder=\"Enter a strong password\"\n                                    variant=\"outlined\"\n                                    type=\"password\"\n                                    name=\"password\"\n                                    value={formik.values.password}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.password && Boolean(formik.errors.password)}\n                                    helperText={formik.touched.password && formik.errors.password}\n                                />\n\n                                <TextField\n                                    color=\"secondary\"\n                                    id=\"filled-basic\"\n                                    label=\"Contact #\"\n                                    placeholder=\"03001234567\"\n                                    variant=\"outlined\"\n                                    // type=\"s\"\n                                    name=\"contact\"\n                                    value={formik.values.contact}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.contact && Boolean(formik.errors.contact)}\n                                    helperText={formik.touched.contact && formik.errors.contact}\n                                />\n\n                                <TextField\n                                    color=\"secondary\"\n                                    id=\"filled-basic\"\n                                    label=\"Address\"\n                                    placeholder=\"House # 0/0 , ABC-Street, XYZ-Town\"\n                                    variant=\"outlined\"\n                                    name=\"address\"\n                                    value={formik.values.address}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.address && Boolean(formik.errors.address)}\n                                    helperText={formik.touched.address && formik.errors.address}\n                                />\n\n                                <TextField\n                                    color=\"secondary\"\n                                    id=\"outlined-basic\"\n                                    label=\"Github Profile Link\"\n                                    placeholder=\"https://somewebsite.com\"\n                                    variant=\"outlined\"\n                                    name=\"website\"\n                                    value={formik.values.website}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.website && Boolean(formik.errors.website)}\n                                    helperText={formik.touched.website && formik.errors.website}\n                                />\n\n                                <Grid item xl={6} lg={6} xs={12} sm={12} md={12}  >\n                                    <Item >\n                                        <Button sx={{ marginBottom: \"1%\" }} variant=\"contained\" color=\"inherit\" type=\"submit\" >Sign up</Button>&nbsp;or\n                                        <Button sx={{ marginLeft: \"1%\", marginBottom: \"1%\" }} variant=\"text\" color=\"inherit\" type=\"submit\" onClick={() => { history.push(\"/login\") }}>Login</Button>if you already have a account.\n                                    </Item >\n                                </Grid>\n                            </Stack>\n                        </Item >\n                    </Grid>\n                </Grid>\n            </form>\n        </div>\n    );\n}\n\nexport default Signup;","export default __webpack_public_path__ + \"static/media/download.84b4112d.jfif\";","import { useFormik, formik } from \"formik\";\nimport { useState, useEffect } from \"react\"\nimport { Grid } from '@mui/material';\nimport Item from '@mui/material/Grid'\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport * as yup from 'yup';\nimport axios from 'axios'\nimport { baseUrl } from \"./../../core\"\nimport imge1 from './../../assets/download.jfif'\nimport imge2 from './../../assets/download2.png'\nimport { useHistory } from \"react-router-dom\";\nimport * as React from 'react';\n// import { styled } from '@mui/material/styles';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\n// import Collapse from '@mui/material/Collapse';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n// import { red } from '@mui/material/colors';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ShareIcon from '@mui/icons-material/Share';\n// import ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\n// import { date } from \"yup/lib/locale\";\nimport { GlobalContext } from \"../../context/Context\";\nimport { useContext } from \"react\";\n// import * as React from 'react';\nimport PropTypes from 'prop-types';\n// import Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\n// import IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n// import Typography from '@mui/material/Typography';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport MenuIcon from '@mui/icons-material/Menu';\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  '& .MuiDialogContent-root': {\n    padding: theme.spacing(2),\n  },\n  '& .MuiDialogActions-root': {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\n// const ExpandMore = styled((props) => {\n//   const { expand, ...other } = props;\n//   return <IconButton {...other} />;\n// })(({ theme, expand }) => ({\n//   transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n//   marginLeft: 'auto',\n//   transition: theme.transitions.create('transform', {\n//     duration: theme.transitions.duration.shortest,\n//   }),\n// }));\n\n// function onSubmitFunction(values) {\n//     console.log(\"values: \", values)\n//   }\n\nconst validationSchema = yup.object({\n  post: yup\n    .string('add something ')\n    .required('required*'),\n});\n\n\nfunction Posts() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // const [expanded, setExpanded] = React.useState(false);\n  // const handleExpandClick = () => {\n  //   setExpanded(!expanded);\n  // };\n\n\n\n  let history = useHistory();\n  let { state, dispatch } = useContext(GlobalContext);\n  const formik = useFormik({\n    validationSchema: validationSchema,\n    initialValues: {\n      post: \"\",\n      createdby: \"\",\n    },\n    onSubmit: onSubmitFunction\n  });\n\n  function onSubmitFunction(values) {\n    console.log(\"values: \", values)\n    if (state?.user?.name) {\n      axios.post(`${baseUrl}/api/v1/posts`, {\n        post: values.post,\n        createdby: state.user.name,\n      })\n        .then(res => {\n          console.log(res.data);\n          setToggleGetUser(!toggleGetUser)\n        });\n    }\n  }\n  const [posts, setPosts] = useState([]);\n  const [toggleGetUser, setToggleGetUser] = useState(false);\n\n  useEffect(() => {\n\n    axios.get(`${baseUrl}/api/v1/posts`)\n      .then(res => {\n        console.log(res.data);\n        setPosts(res.data)\n      });\n\n    return () => {\n      console.log(\"post shown\");\n    };\n  }, [toggleGetUser]);\n\n  return (\n    <div>\n    <Box sx={{ flexGrow: 1 }}>\n    <AppBar position=\"static\">\n      <Toolbar>\n        <IconButton\n          size=\"large\"\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"menu\"\n          sx={{ mr: 2 }}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n          Welcome {state.user.name}\n        </Typography>\n        <Button onClick={() => {history.push(\"/profile\");}} variant=\"contained\" color=\"error\">Profile</Button>\n        <Button  onClick={() => {\n                   \n                      history.push(\"/login\");\n                      dispatch({\n                        type: \"LOGOUT\",\n                        payload: null,\n                      });\n              \n                  }} variant=\"contained\" color=\"error\">Logout</Button>\n\n      </Toolbar>\n    </AppBar>\n  </Box>\n    <div style={{ padding: \"1rem\" }}>\n      <h1 style={{ margin: \"auto\", padding: \"1rem\", textAlign: \"center\" }}>POSTS</h1>\n      <br />\n      <form onSubmit={formik.handleSubmit}>\n        <div >\n          <Grid container spacing={1} sx={{ paddingLeft: \"10%\", paddingRight: \"10%\" }} >\n            <Grid item xl={8} lg={8} xs={12} sm={12} md={12}  >\n              <Item  >\n                <Stack spacing={3}  >\n                  <TextField\n                    color=\"primary\"\n                    id=\"outlined-basic\"\n                    variant=\"outlined\"\n                    placeholder=\"Whats in your mind\"\n                    name=\"post\"\n                    // inputProps={{\n                    //   maxlength: 20\n                    // }}\n                    value={formik.values.post}\n                    onChange={formik.handleChange}\n                    error={formik.touched.post && Boolean(formik.errors.post)}\n                    helperText={formik.touched.post && formik.errors.post}\n                  />\n                </Stack>\n              </Item >\n            </Grid>\n            <Grid item xl={2} lg={2} xs={12} sm={4} md={4} >\n              <Item>\n                <Button sx={{ height: \"35px\", width: \"100%\", fontSize: \"12px\" }} variant=\"contained\" color=\"info\" type=\"submit\">POST</Button>\n              </Item >\n            </Grid>       \n          </Grid>\n        </div>\n      </form>\n      <br /><br />\n      {state?.user?.name && posts.map(eachPost => {\n        return <>\n          <Card sx={{ maxWidth: 845, margin: \"auto\" }}>\n            <CardHeader\n              avatar={<Avatar sx={{ backgroundColor: \"transparent\" }} aria-label=\"profile\"><img style={{ width: \"50px\" }} src={imge1} /></Avatar>}\n              action={<IconButton aria-label=\"settings\"><MoreVertIcon /></IconButton>}\n              title={eachPost.createdby}\n            // {posts.map(eachPost => {\n            //               return <>\n            //               {eachPost.name}\n            //               </>\n            //             })}\n            />\n            <CardContent>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                {/* <div style={{overflowWrap: \"breakWord\"}}> */}\n                {/* {<h4 style={{overflowWrap: \"breakWord\"}}>{eachPost.post}</h4>} */}\n                {/* </div> */}\n                {eachPost.post}\n              </Typography>\n            </CardContent>\n            <CardActions disableSpacing>\n              <IconButton aria-label=\"add to favorites\"><FavoriteIcon /></IconButton>\n              <IconButton aria-label=\"share\"><ShareIcon /></IconButton></CardActions>\n          </Card>\n          <br />\n        </>\n      })}\n    </div>\n    </div>\n  );\n}\n\nexport default Posts;","import { useState, useEffect } from \"react\"\r\nimport { Grid } from '@mui/material';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from 'react';\r\nimport { GlobalContext } from \"../../context/Context\";\r\nimport { useContext } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { styled } from '@mui/material/styles';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\n\r\nfunction Profile() {\r\n  let history = useHistory();\r\n  let { state, dispatch } = useContext(GlobalContext);\r\n  return (\r\n    <div style={{ padding: \"1rem\" }}>\r\n          <Box sx={{ flexGrow: 1 }}>\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <IconButton\r\n          size=\"large\"\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"menu\"\r\n          sx={{ mr: 2 }}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n          Welcome {state.user.name}\r\n        </Typography>\r\n        <Button onClick={() => {history.push(\"/posts\");}} variant=\"contained\" color=\"error\" >Posts</Button>\r\n        <Button  onClick={() => {\r\n                   \r\n                      history.push(\"/login\");\r\n                      dispatch({\r\n                        type: \"LOGOUT\",\r\n                        payload: null,\r\n                      });\r\n              \r\n                  }} variant=\"contained\" color=\"error\">Logout</Button>\r\n\r\n      </Toolbar>\r\n    </AppBar>\r\n  </Box>\r\n      <h1 style={{ margin: \"auto\", padding: \"1rem\", textAlign: \"center\" }}>Profile Info</h1>\r\n      <br />\r\n      <Typography gutterBottom  >\r\n            Name: {state.user.name}<br />Email: {state.user.email}<br />Contact: {state.user.contact}<br />website: {state.user.website}<br />Address: {state.user.address}\r\n          </Typography>\r\n      <br /><br />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;","import logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Login from \"./components/login/login\"\nimport Signup from \"./components/signup/signup\"\nimport Posts from \"./components/posts/posts\"\nimport Profile from \"./components/profile/profile\"\n\nfunction App() {\n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/\">\n          <Signup />\n        </Route>\n\n        <Route path=\"/signup\">\n          <Signup />\n        </Route>\n\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n\n        <Route path=\"/posts\">\n          <Posts />\n        </Route>\n\n        <Route path=\"/profile\">\n          <Profile />\n        </Route>\n\n        <Route render={() => <Redirect to={{ pathname: \"/\" }} />} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\nimport ContextProvider from \"./context/Context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n      <Router>\n\n        <App />\n      </Router>\n    </ContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}